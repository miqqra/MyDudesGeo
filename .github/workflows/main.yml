name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Compile project
        run: mvn clean compile

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: compile 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run tests
        run: mvn test

  image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Build Docker Image
        run: docker-compose -f docker-compose.yml up --build -d

      - name: Add tag
        run: docker tag docker.io/library/mydudesgeo_app:latest ${{ secrets.DOCKERHUB_USERNAME }}/mydudes:latest

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker-compose -f docker-compose.yml push

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: image
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          port: 22
          script: |
            cd MyDudesGeo
            docker-compose down
            docker rmi mydudesgeo_app
            docker-compose pull
            docker-compose up -d
